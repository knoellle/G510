diff -Nuarw g15daemon-1.9.5.3.orig/g15daemon/g15daemon.h g15daemon-1.9.5.3/g15daemon/g15daemon.h
--- g15daemon-1.9.5.3.orig/g15daemon/g15daemon.h	2008-01-24 13:51:07.000000000 +0100
+++ g15daemon-1.9.5.3/g15daemon/g15daemon.h	2020-12-18 19:16:03.889578110 +0100
@@ -122,7 +122,7 @@
     config_items_t *head;
     char *key;
     char *value;
-} config_items_s;
+};
 
 typedef struct config_section_s
 {
@@ -130,12 +130,12 @@
     config_section_t *next;
     char *sectionname;
     config_items_t *items;
-}config_section_s;
+};
 
 typedef struct configfile_s
 {
     config_section_t *sections;
-}configfile_s;
+};
 
 typedef struct plugin_info_s 
 {
@@ -153,7 +153,7 @@
     /* init func if there is one else NULL*/
     int *(*plugin_init) (void *);
     char *filename;
-} plugin_info_s;
+};
 
 typedef struct plugin_s 
 {
@@ -183,7 +183,7 @@
     /* only used for plugins */
     plugin_t *g15plugin;
     
-} lcd_s;
+};
 
 
 typedef struct plugin_event_s
@@ -191,7 +191,7 @@
     unsigned int event;
     unsigned long value;
     lcd_t *lcd;
-} plugin_event_s;
+};
 
 
 struct lcdnode_s {
@@ -200,7 +200,7 @@
     lcdnode_t *next;
     lcdnode_t *last_priority;
     lcd_t *lcd;
-}lcdnode_s;
+};
 
 struct g15daemon_s
 {
@@ -213,10 +213,10 @@
     configfile_t *config;
     unsigned int kb_backlight_state; // master state
     unsigned int remote_keyhandler_sock;
-}g15daemon_s;
+};
 
-pthread_mutex_t lcdlist_mutex;
-pthread_mutex_t g15lib_mutex;
+extern pthread_mutex_t lcdlist_mutex;
+extern pthread_mutex_t g15lib_mutex;
 
 /* server hello */
 #define SERV_HELO "G15 daemon HELLO"
diff -Nuarw g15daemon-1.9.5.3.orig/g15daemon/main.c g15daemon-1.9.5.3/g15daemon/main.c
--- g15daemon-1.9.5.3.orig/g15daemon/main.c	2008-01-31 06:02:53.000000000 +0100
+++ g15daemon-1.9.5.3/g15daemon/main.c	2020-12-18 19:16:03.889578110 +0100
@@ -58,7 +58,8 @@
 struct lcd_t *keyhandler = NULL;
 
 static int loaded_plugins = 0;
-
+pthread_mutex_t lcdlist_mutex;
+pthread_mutex_t g15lib_mutex;
 /* send event to foreground client's eventlistener */
 int g15daemon_send_event(void *caller, unsigned int event, unsigned long value)
 {
diff -Nuarw g15daemon-1.9.5.3.orig/g15daemon/utility_funcs.c g15daemon-1.9.5.3/g15daemon/utility_funcs.c
--- g15daemon-1.9.5.3.orig/g15daemon/utility_funcs.c	2008-01-26 06:02:07.000000000 +0100
+++ g15daemon-1.9.5.3/g15daemon/utility_funcs.c	2020-12-18 19:16:03.889578110 +0100
@@ -356,7 +356,7 @@
     config_items_t * item=NULL;
     char line[1024];
     
-    config_fd = open(filename,O_CREAT|O_RDWR|O_TRUNC);
+    config_fd = open(filename,O_CREAT|O_RDWR|O_TRUNC, 0644);
     if(config_fd){
     snprintf(line,1024,"# G15Daemon Configuration File\n# any items entered before a [section] header\n# will be in the Global config space\n# comments you wish to keep should start with a semicolon';'\n");
     write(config_fd,line,strlen(line));
diff -Nuarw g15daemon-1.9.5.3.orig/plugins/g15_plugin_clock.c g15daemon-1.9.5.3/plugins/g15_plugin_clock.c
--- g15daemon-1.9.5.3.orig/plugins/g15_plugin_clock.c	2008-01-24 13:51:07.000000000 +0100
+++ g15daemon-1.9.5.3/plugins/g15_plugin_clock.c	2020-12-20 15:57:30.525440149 +0100
@@ -347,6 +347,6 @@
 /* if no exitfunc or eventhandler, member should be NULL */
 plugin_info_t g15plugin_info[] = {
     /* TYPE, name, initfunc, updatefreq, exitfunc, eventhandler, initfunc */
-    {G15_PLUGIN_LCD_CLIENT, "Clock", (void*)lcdclock, 500, (void*)callmewhenimdone, (void*)myeventhandler, (void*)myinithandler},
+    {G15_PLUGIN_LCD_CLIENT, "Clock", (void*)lcdclock, 200, (void*)callmewhenimdone, (void*)myeventhandler, (void*)myinithandler},
     {G15_PLUGIN_NONE,               ""          , NULL,     0,   NULL,            NULL,           NULL}
 };
diff -Nuarw g15daemon-1.9.5.3.orig/plugins/g15_plugin_uinput.c g15daemon-1.9.5.3/plugins/g15_plugin_uinput.c
--- g15daemon-1.9.5.3.orig/plugins/g15_plugin_uinput.c	2008-01-24 13:51:07.000000000 +0100
+++ g15daemon-1.9.5.3/plugins/g15_plugin_uinput.c	2020-12-18 19:16:03.892911447 +0100
@@ -43,9 +43,16 @@
 
 #include <libg15.h>
 
+static char cmd[256];
 static int uinp_fd = -1;
 static config_section_t *uinput_cfg=NULL;
 static int map_Lkeys = 0;
+static int vol_state = 0;
+static int mkey_state = 0;
+static int mr_state = 0;
+static unsigned int mled_state = G15_LED_M1;
+/*mkey state 0,1 and 2 = M1, M2 and M3*/
+
 
 #define GKEY_OFFSET 167
 #define MKEY_OFFSET 185
@@ -125,6 +132,16 @@
     event.value = G15KEY_DOWN;
     
     write (uinp_fd, &event, sizeof(event));
+
+    /* Need to write sync event */
+    memset(&event, 0, sizeof(event));
+
+    event.type = EV_SYN;
+    event.code = SYN_REPORT;
+    event.value = 0;
+
+    write(uinp_fd, &event, sizeof(event));
+
 }
 
 static void g15_uinput_keyup(unsigned char code)
@@ -137,8 +154,17 @@
     event.value = G15KEY_UP;
     
     write (uinp_fd, &event, sizeof(event));
-}
 
+    /* Need to write sync event */
+    memset(&event, 0, sizeof(event));
+
+    event.type = EV_SYN;
+    event.code = SYN_REPORT;
+    event.value = 0;
+
+    write(uinp_fd, &event, sizeof(event));
+
+}
     void (*keyup)(unsigned char code) = &g15_uinput_keyup;
     void (*keydown)(unsigned char code) = &g15_uinput_keydown;
 #else
@@ -147,120 +173,246 @@
 #endif
 #endif
     
+/*The layout of the 'G' keys is now hard-coded here below. See /usr/include/linux/input.h for details on the keys you can use*/
 static void g15_process_keys(g15daemon_t *masterlist, unsigned int currentkeys, unsigned int lastkeys)
 {
-    /* 'G' keys */
+    const char* launcher = "machinectl shell --uid=1000 .host";
+    if(!(currentkeys & G15_KEY_LIGHT))
+    {
     if((currentkeys & G15_KEY_G1) && !(lastkeys & G15_KEY_G1))
-        keydown(GKEY_OFFSET);
+    {
+        snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G1 on %d", launcher, mkey_state);
+        system(cmd);
+    }
     else if(!(currentkeys & G15_KEY_G1) && (lastkeys & G15_KEY_G1))
-        keyup(GKEY_OFFSET);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G1 off %d", launcher, mkey_state);
+        system(cmd);
+    }
 
     if((currentkeys & G15_KEY_G2) && !(lastkeys & G15_KEY_G2))
-        keydown(GKEY_OFFSET+1);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G2 on %d", launcher, mkey_state);
+        system(cmd);
+    }
     else if(!(currentkeys & G15_KEY_G2) && (lastkeys & G15_KEY_G2))
-        keyup(GKEY_OFFSET+1);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G2 off %d", launcher, mkey_state);
+        system(cmd);
+    }
 
     if((currentkeys & G15_KEY_G3) && !(lastkeys & G15_KEY_G3))
-        keydown(GKEY_OFFSET+2);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G3 on %d", launcher, mkey_state);
+        system(cmd);
+    }
     else if(!(currentkeys & G15_KEY_G3) && (lastkeys & G15_KEY_G3))
-        keyup(GKEY_OFFSET+2);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G3 off %d", launcher, mkey_state);
+        system(cmd);
+    }
 
     if((currentkeys & G15_KEY_G4) && !(lastkeys & G15_KEY_G4))
-        keydown(GKEY_OFFSET+3);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G4 on %d", launcher, mkey_state);
+        system(cmd);
+    }
     else if(!(currentkeys & G15_KEY_G4) && (lastkeys & G15_KEY_G4))
-        keyup(GKEY_OFFSET+3);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G4 off %d", launcher, mkey_state);
+        system(cmd);
+    }
 
     if((currentkeys & G15_KEY_G5) && !(lastkeys & G15_KEY_G5))
-        keydown(GKEY_OFFSET+4);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G5 on %d", launcher, mkey_state);
+        system(cmd);
+    }
     else if(!(currentkeys & G15_KEY_G5) && (lastkeys & G15_KEY_G5))
-        keyup(GKEY_OFFSET+4);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G5 off %d", launcher, mkey_state);
+        system(cmd);
+    }
 
     if((currentkeys & G15_KEY_G6) && !(lastkeys & G15_KEY_G6))
-        keydown(GKEY_OFFSET+5);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G6 on %d", launcher, mkey_state);
+        system(cmd);
+    }
     else if(!(currentkeys & G15_KEY_G6) && (lastkeys & G15_KEY_G6))
-        keyup(GKEY_OFFSET+5);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G6 off %d", launcher, mkey_state);
+        system(cmd);
+    }
 
     if((currentkeys & G15_KEY_G7) && !(lastkeys & G15_KEY_G7))
-        keydown(GKEY_OFFSET+6);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G7 on %d", launcher, mkey_state);
+        system(cmd);
+    }
     else if(!(currentkeys & G15_KEY_G7) && (lastkeys & G15_KEY_G7))
-        keyup(GKEY_OFFSET+6);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G7 off %d", launcher, mkey_state);
+        system(cmd);
+    }
 
     if((currentkeys & G15_KEY_G8) && !(lastkeys & G15_KEY_G8))
-        keydown(GKEY_OFFSET+7);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G8 on %d", launcher, mkey_state);
+        system(cmd);
+    }
     else if(!(currentkeys & G15_KEY_G8) && (lastkeys & G15_KEY_G8))
-        keyup(GKEY_OFFSET+7);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G8 off %d", launcher, mkey_state);
+        system(cmd);
+    }
 
     if((currentkeys & G15_KEY_G9) && !(lastkeys & G15_KEY_G9))
-        keydown(GKEY_OFFSET+8);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G9 on %d", launcher, mkey_state);
+        system(cmd);
+    }
     else if(!(currentkeys & G15_KEY_G9) && (lastkeys & G15_KEY_G9))
-        keyup(GKEY_OFFSET+8);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G9 off %d", launcher, mkey_state);
+        system(cmd);
+    }
 
     if((currentkeys & G15_KEY_G10) && !(lastkeys & G15_KEY_G10))
-        keydown(GKEY_OFFSET+9);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G10 on %d", launcher, mkey_state);
+        system(cmd);
+    }
     else if(!(currentkeys & G15_KEY_G10) && (lastkeys & G15_KEY_G10))
-        keyup(GKEY_OFFSET+9);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G10 off %d", launcher, mkey_state);
+        system(cmd);
+    }
 
     if((currentkeys & G15_KEY_G11) && !(lastkeys & G15_KEY_G11))
-        keydown(GKEY_OFFSET+10);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G11 on %d", launcher, mkey_state);
+        system(cmd);
+    }
     else if(!(currentkeys & G15_KEY_G11) && (lastkeys & G15_KEY_G11))
-        keyup(GKEY_OFFSET+10);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G11 off %d", launcher, mkey_state);
+        system(cmd);
+    }
 
     if((currentkeys & G15_KEY_G12) && !(lastkeys & G15_KEY_G12))
-        keydown(GKEY_OFFSET+11);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G12 on %d", launcher, mkey_state);
+        system(cmd);
+    }
     else if(!(currentkeys & G15_KEY_G12) && (lastkeys & G15_KEY_G12))
-        keyup(GKEY_OFFSET+11);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G12 off %d", launcher, mkey_state);
+        system(cmd);
+    }
 
     if((currentkeys & G15_KEY_G13) && !(lastkeys & G15_KEY_G13))
-        keydown(GKEY_OFFSET+12);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G13 on %d", launcher, mkey_state);
+        system(cmd);
+    }
     else if(!(currentkeys & G15_KEY_G13) && (lastkeys & G15_KEY_G13))
-        keyup(GKEY_OFFSET+12);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G13 off %d", launcher, mkey_state);
+        system(cmd);
+    }
 
     if((currentkeys & G15_KEY_G14) && !(lastkeys & G15_KEY_G14))
-        keydown(GKEY_OFFSET+13);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G14 on %d", launcher, mkey_state);
+        system(cmd);
+    }
     else if(!(currentkeys & G15_KEY_G14) && (lastkeys & G15_KEY_G14))
-        keyup(GKEY_OFFSET+13);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G14 off %d", launcher, mkey_state);
+        system(cmd);
+    }
 
     if((currentkeys & G15_KEY_G15) && !(lastkeys & G15_KEY_G15))
-        keydown(GKEY_OFFSET+14);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G15 on %d", launcher, mkey_state);
+        system(cmd);
+    }
     else if(!(currentkeys & G15_KEY_G15) && (lastkeys & G15_KEY_G15))
-        keyup(GKEY_OFFSET+14);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G15 off %d", launcher, mkey_state);
+        system(cmd);
+    }
 
     if((currentkeys & G15_KEY_G16) && !(lastkeys & G15_KEY_G16))
-        keydown(GKEY_OFFSET+15);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G16 on %d", launcher, mkey_state);
+        system(cmd);
+    }
     else if(!(currentkeys & G15_KEY_G16) && (lastkeys & G15_KEY_G16))
-        keyup(GKEY_OFFSET+15);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G16 off %d", launcher, mkey_state);
+        system(cmd);
+    }
 
     if((currentkeys & G15_KEY_G17) && !(lastkeys & G15_KEY_G17))
-        keydown(GKEY_OFFSET+16);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G17 on %d", launcher, mkey_state);
+        system(cmd);
+    }
     else if(!(currentkeys & G15_KEY_G17) && (lastkeys & G15_KEY_G17))
-        keyup(GKEY_OFFSET+16);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G17 off %d", launcher, mkey_state);
+        system(cmd);
+    }
 
     if((currentkeys & G15_KEY_G18) && !(lastkeys & G15_KEY_G18))
-        keydown(GKEY_OFFSET+17);
+     {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G18 on %d", launcher, mkey_state);
+        system(cmd);
+    }
     else if(!(currentkeys & G15_KEY_G18) && (lastkeys & G15_KEY_G18))
-        keyup(GKEY_OFFSET+17);
+    {   snprintf(cmd, sizeof cmd,
+        "%s /usr/share/g15daemon/macros/G18 off %d", launcher, mkey_state);
+        system(cmd);
+    }
 
-    /* 'M' keys */
+        /* 'M' keys... */
 
     if((currentkeys & G15_KEY_M1) && !(lastkeys & G15_KEY_M1))
-        keydown(MKEY_OFFSET);
-    else if(!(currentkeys & G15_KEY_M1) && (lastkeys & G15_KEY_M1))
-        keyup(MKEY_OFFSET);
+            //keydown(MKEY_OFFSET);
+        mkey_state = 0;
+        /*else if(!(currentkeys & G15_KEY_M1) && (lastkeys & G15_KEY_M1))
+            keyup(MKEY_OFFSET);*/
 
     if((currentkeys & G15_KEY_M2) && !(lastkeys & G15_KEY_M2))
-        keydown(MKEY_OFFSET+1);
-    else if(!(currentkeys & G15_KEY_M2) && (lastkeys & G15_KEY_M2))
-        keyup(MKEY_OFFSET+1);
+            //keydown(MKEY_OFFSET+1);
+        mkey_state = 1;
+        /*else if(!(currentkeys & G15_KEY_M2) && (lastkeys & G15_KEY_M2))
+            keyup(MKEY_OFFSET+1);*/
 
     if((currentkeys & G15_KEY_M3) && !(lastkeys & G15_KEY_M3))
-        keydown(MKEY_OFFSET+2);
-    else if(!(currentkeys & G15_KEY_M3) && (lastkeys & G15_KEY_M3))
-        keyup(MKEY_OFFSET+2);
-
-    if((currentkeys & G15_KEY_MR) && !(lastkeys & G15_KEY_MR))
-        keydown(MKEY_OFFSET+3);
-    else if(!(currentkeys & G15_KEY_MR) && (lastkeys & G15_KEY_MR))
-        keyup(MKEY_OFFSET+3);
+            //keydown(MKEY_OFFSET+2);
+        mkey_state = 2;
+        /*else if(!(currentkeys & G15_KEY_M3) && (lastkeys & G15_KEY_M3))
+            keyup(MKEY_OFFSET+2);*/
+
+    if((currentkeys & G15_KEY_MR) && !(lastkeys & G15_KEY_MR) && mr_state == 0){
+        mr_state = 1;
+        system("sudo -H -u '#1000' /usr/share/g15daemon/macros/MacroRecord on & disown");
+    }
+    else if(!(currentkeys & G15_KEY_MR) && (lastkeys & G15_KEY_MR) && mr_state == 1){
+    /*Toggle function on first key release*/
+    }
+    else if((currentkeys & G15_KEY_MR) && !(lastkeys & G15_KEY_MR) && mr_state == 1){
+        mr_state = 0;
+        system("sudo -H -u '#1000' /usr/share/g15daemon/macros/MacroRecord off & disown");
+    }
+    else if(!(currentkeys & G15_KEY_MR) && (lastkeys & G15_KEY_MR) && mr_state == 0){
+    /*Úntoggle function on second key release*/
+    }
     
     if(map_Lkeys){
         /* 'L' keys...  */
@@ -289,6 +441,73 @@
         else if(!(currentkeys & G15_KEY_L5) && (lastkeys & G15_KEY_L5))
             keyup(LKEY_OFFSET+4);
     }
+
+    }
+
+
+     else
+     {
+        // G15_KEY_LIGHT - Key modifier for Logitech G510 Media Keys implementation
+
+        // XF86AudioPlay
+        if((currentkeys & G15_KEY_G1) && !(lastkeys & G15_KEY_G1))
+            keydown(KEY_PLAYPAUSE);
+        else if(!(currentkeys & G15_KEY_G1) && (lastkeys & G15_KEY_G1))
+            keyup(KEY_PLAYPAUSE);
+
+        // XF86AudioStop
+        if((currentkeys & G15_KEY_G2) && !(lastkeys & G15_KEY_G2))
+            keydown(KEY_STOPCD);
+        else if(!(currentkeys & G15_KEY_G2) && (lastkeys & G15_KEY_G2))
+            keyup(KEY_STOPCD);
+
+        // XF86AudioPrev
+        if((currentkeys & G15_KEY_G3) && !(lastkeys & G15_KEY_G3))
+            keydown(KEY_PREVIOUSSONG);
+        else if(!(currentkeys & G15_KEY_G3) && (lastkeys & G15_KEY_G3))
+            keyup(KEY_PREVIOUSSONG);
+
+        // XF86AudioNext
+        if((currentkeys & G15_KEY_G4) && !(lastkeys & G15_KEY_G4))
+            keydown(KEY_NEXTSONG);
+        else if(!(currentkeys & G15_KEY_G4) && (lastkeys & G15_KEY_G4))
+            keyup(KEY_NEXTSONG);
+
+        // XF86AudioMute
+        if((currentkeys & G15_KEY_G5) && !(lastkeys & G15_KEY_G5))
+            keydown(KEY_MUTE);
+        else if(!(currentkeys & G15_KEY_G5) && (lastkeys & G15_KEY_G5))
+            keyup(KEY_MUTE);
+
+        // XF86AudioRaise/LowerVolume (this was a pain to figure out, i dropped it at one point while it was semi-functioning and fixed it later)
+        if(((currentkeys & G15_KEY_G6) && !(lastkeys & G15_KEY_G6)) && (vol_state == 0 || vol_state == 1)){
+        keydown(KEY_VOLUMEUP);
+        vol_state = 1;
+    }
+        else if(((currentkeys & G15_KEY_G7) && !(lastkeys & G15_KEY_G7)) && (vol_state == 0 || vol_state == 2)){
+        keydown(KEY_VOLUMEDOWN);
+        vol_state = 2;
+    }
+    else if((!(currentkeys & G15_KEY_G6) || !(currentkeys & G15_KEY_G7)) && ((lastkeys & G15_KEY_G7) || (lastkeys & G15_KEY_G6))){
+        keyup(KEY_VOLUMEUP);
+            keyup(KEY_VOLUMEDOWN);
+        vol_state = 0;
+        }
+    }
+/*Set led states per M key (Doing this in the switch was slow and didn't activate till after button release)*/
+    if(mkey_state == 0)
+    mled_state = G15_LED_M1;
+    else if(mkey_state == 1)
+    mled_state = G15_LED_M2;
+    else if(mkey_state == 2)
+    mled_state = G15_LED_M3;
+
+/*Set leds and toggle MR led depending on mr_state*/
+    if(mr_state == 0)
+    setLEDs(mled_state -0x20);
+    else if(mr_state == 1)
+    setLEDs(mled_state -0x20 | G15_LED_MR -0x20);
+
 }
 
 
